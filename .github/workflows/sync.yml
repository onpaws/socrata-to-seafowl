name: Sync Socrata to Seafowl

on:
  workflow_dispatch:
  # schedule:
  # - cron: "10 0 * * *"

jobs:
  sync:
    name: Run the sync
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.9 ]
    steps:
    - uses: actions/checkout@v3
    - uses: pantsbuild/actions/init-pants@main
      with:
        gha-cache-key: cache0-py${{ matrix.python-version }}
        named-caches-hash: ${{ hashFiles('python-default.lock') }}
        cache-lmdb-store: 'true'  # defaults to 'false'
        base-branch: 'master'
        pants-ci-config: ''
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup flyctl
      uses: superfly/flyctl-actions/setup-flyctl@master
    - name: Scale Fly VM up and block until finished
      run: flyctl scale vm dedicated-cpu-4x --memory=32768; sleep 10; flyctl monitor; sleep 10
      env:
        FLY_ACCESS_TOKEN: ${{ secrets.FLY_ACCESS_TOKEN }}
    - name: Run the sync
      env:
        SEAFOWL_PASSWORD: ${{ secrets.SEAFOWL_PASSWORD }}
      run: |
        ./pants run src/s2sf:s2sf -- ingest data.splitgraph.com https://seafowl-socrata.fly.dev --execute
    - name: Build derived tables
      env:
        SEAFOWL_PASSWORD: ${{ secrets.SEAFOWL_PASSWORD }}
      run: |
        ./pants run src/s2sf:s2sf -- build https://seafowl-socrata.fly.dev
    - name: Clean up old table versions
      env:
        SEAFOWL_PASSWORD: ${{ secrets.SEAFOWL_PASSWORD }}
      run: |
        ./pants run src/s2sf:s2sf -- build https://seafowl-socrata.fly.dev || (echo "retrying"; sleep 10; ./pants run src/s2sf:s2sf -- build https://seafowl-socrata.fly.dev)
    - name: Scale Fly VM down
      if: always
      run: flyctl scale vm shared-cpu-1x --memory=2048
      env:
        FLY_ACCESS_TOKEN: ${{ secrets.FLY_ACCESS_TOKEN }}
